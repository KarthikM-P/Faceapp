trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '6fec79d6-81dc-45e8-84e5-915ab9abdfeb'
  imageRepository: 'facesketchapp'
  containerRegistry: 'democontainer01.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  helmNamespace: 'helmfacesketch'
  helmReleaseName: 'facesketchapp'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build and Push Docker Image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push image
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    # ✅ Publish Helm chart as artifact
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/myapp'
        artifact: helmchart

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: DeployToAKS
    displayName: Helm Deploy to AKS
    environment: 'Facesketchapp-4676.facesketch'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          # ✅ Download published Helm chart
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: helmchart
              path: $(Pipeline.Workspace)/helmchart

          - task: AzureCLI@2
            displayName: Helm Install/Upgrade
            inputs:
              azureSubscription: 'AzureAKSConnection'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Getting AKS credentials..."
                az aks get-credentials \
                  --resource-group Ivoyant_group \
                  --name Allpurposes \
                  --overwrite-existing

                echo "Deploying using Helm..."
                helm upgrade --install $(helmReleaseName) $(Pipeline.Workspace)/helmchart \
                  --set image.repository=$(containerRegistry)/$(imageRepository) \
                  --set image.tag=$(tag) \
                  --namespace $(helmNamespace) --create-namespace
